{
    "code": {
        "defs": {
            "append_value_to_key": {"name": "append_value_to_key", "exec": "def append_value_to_key(d, /, *, key, value: int): d[key].append(value); return d", "n": 1}
        }
    },
    "instr": [
        1,
        {"op": "dup"},
        [
            {"op": "ppop"},
            2,
            {"op": "+"}
        ],

        {"op": "dup", "offset": 1},
        {"op": "dup", "offset": 1},

        {"op": "dup", "offset": 1},
        {"op": "dup", "offset": 1},
        {"op": "swap"},
        
        1,
        {"op": "drop"},

        2,
        3,
        1,
        {"op": "reorder", "order": [0, 2, 1]},

        {"foo": [1, 2, 3]},
        {"op": "dup"},
        {"op": "append_value_to_key", "key": "foo", "value": 4},
        {"op": "dup", "deep": true},
        {"op": "append_value_to_key", "key": "foo", "value": 5}
    ],
    "tests": [
        {
            "name": "std.stack",
            "checks": [
                {
                    "eq": [
                        1,
                        3,
                        1,
                        3,
                        3,
                        1,
                        
                        1, 2, 3,

                        {"foo": [1, 2, 3, 4]},
                        {"foo": [1, 2, 3, 4]},
                        {"foo": [1, 2, 3, 4, 5]}
                    ]
                }
            ]
        }
    ]
}
